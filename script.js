const wheel = document.getElementById('wheel');
const spinBtn = document.getElementById('spinBtn');
const resultEl = document.getElementById('result');

// –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø
// URL –≤–∞—à–µ–≥–æ API —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ PythonAnywhere
const API_URL = 'https://iseenoev1l.pythonanywhere.com';

let rolls = [
  "Special Rolls",
  "Philadelphia Rolls",
  "California Rolls",
  "Baked Rolls",
  "Tempura Rolls",
  "Volcano Rolls",
  "Dragon Rolls"
];

let isSpinning = false;
let deviceFingerprint = null;

// --- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è ---
console.log('%cüç± Watta Sushi Roulette', 'font-size: 20px; font-weight: bold; color: #12522D;');
console.log('%c–°–∏—Å—Ç–µ–º–∞ –∑–∞—â–∏—Ç—ã –æ—Ç –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –ø–æ–ø—ã—Ç–æ–∫ –∞–∫—Ç–∏–≤–Ω–∞', 'color: #1a6d3f;');
generateSegments();
generateFingerprint();
createFloatingEmojis();

// --- –ü–û–õ–ù–ê–Ø –ë–õ–û–ö–ò–†–û–í–ö–ê –°–ö–†–û–õ–õ–ê –ò –ó–£–ú–ê ---
document.addEventListener('touchstart', function(e) {
  if (e.touches.length > 1) {
    e.preventDefault(); // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –∑—É–º –ø—Ä–∏ –º—É–ª—å—Ç–∏—Ç–∞—á–µ
  }
}, { passive: false });

document.addEventListener('touchend', function(e) {
  const now = Date.now();
  if (now - lastTouchEnd <= 300) {
    e.preventDefault(); // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –∑—É–º –ø—Ä–∏ –±—ã—Å—Ç—Ä–æ–º –¥–≤–æ–π–Ω–æ–º —Ç–∞–ø–µ
  }
  lastTouchEnd = now;
}, { passive: false });

// –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–µ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –∏ –±–ª–æ–∫–∏—Ä—É–µ–º —Å–∫—Ä–æ–ª–ª –≤–µ–∑–¥–µ –ö–†–û–ú–ï –ª–∏–¥–µ—Ä–±–æ—Ä–¥–∞
document.addEventListener('DOMContentLoaded', function() {
  // –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–µ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ
  document.documentElement.style.height = '100vh';
  document.documentElement.style.width = '100vw';
  document.documentElement.style.overflow = 'hidden';
  document.body.style.height = '100vh';
  document.body.style.width = '100vw';
  document.body.style.overflow = 'hidden';
  document.body.style.position = 'fixed';
  document.body.style.top = '0';
  document.body.style.left = '0';
});

// –ë–ª–æ–∫–∏—Ä—É–µ–º —Å–∫—Ä–æ–ª–ª –≤–µ–∑–¥–µ –ö–†–û–ú–ï –ª–∏–¥–µ—Ä–±–æ—Ä–¥–∞
document.addEventListener('wheel', function(e) {
  // –†–∞–∑—Ä–µ—à–∞–µ–º —Å–∫—Ä–æ–ª–ª —Ç–æ–ª—å–∫–æ –≤ –ª–∏–¥–µ—Ä–±–æ—Ä–¥–µ
  if (e.target.closest('.leaderboard-list') || e.target.closest('.leaderboard')) {
    return; // –ù–µ –±–ª–æ–∫–∏—Ä—É–µ–º —Å–∫—Ä–æ–ª–ª –≤ –ª–∏–¥–µ—Ä–±–æ—Ä–¥–µ
  }
  e.preventDefault();
}, { passive: false });

document.addEventListener('touchmove', function(e) {
  // –†–∞–∑—Ä–µ—à–∞–µ–º —Å–∫—Ä–æ–ª–ª —Ç–æ–ª—å–∫–æ –≤ –ª–∏–¥–µ—Ä–±–æ—Ä–¥–µ
  if (e.target.closest('.leaderboard-list') || e.target.closest('.leaderboard')) {
    return; // –ù–µ –±–ª–æ–∫–∏—Ä—É–µ–º —Å–∫—Ä–æ–ª–ª –≤ –ª–∏–¥–µ—Ä–±–æ—Ä–¥–µ
  }
  e.preventDefault();
}, { passive: false });

document.addEventListener('keydown', function(e) {
  // –†–∞–∑—Ä–µ—à–∞–µ–º –∫–ª–∞–≤–∏—à–∏ —Å–∫—Ä–æ–ª–ª–∞ —Ç–æ–ª—å–∫–æ –≤ –ª–∏–¥–µ—Ä–±–æ—Ä–¥–µ
  if (e.target.closest('.leaderboard-list') || e.target.closest('.leaderboard')) {
    return; // –ù–µ –±–ª–æ–∫–∏—Ä—É–µ–º –∫–ª–∞–≤–∏—à–∏ –≤ –ª–∏–¥–µ—Ä–±–æ—Ä–¥–µ
  }
  
  // –ë–ª–æ–∫–∏—Ä—É–µ–º –∫–ª–∞–≤–∏—à–∏ —Å–∫—Ä–æ–ª–ª–∞ –≤–µ–∑–¥–µ –∫—Ä–æ–º–µ –ª–∏–¥–µ—Ä–±–æ—Ä–¥–∞
  if ([32, 33, 34, 35, 36, 37, 38, 39, 40].indexOf(e.keyCode) > -1) {
    e.preventDefault();
  }
}, { passive: false });

let lastTouchEnd = 0;

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ª—É—á—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏–≥—Ä–æ–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
loadPlayerBestScore();

// –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é —Ö–µ–¥–µ—Ä–∞
function startHeaderAnimation() {
  const animatedHeader = document.querySelector('.animated-header');
  if (animatedHeader) {
    // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é —á–µ—Ä–µ–∑ –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É
    setTimeout(() => {
      animatedHeader.classList.add('animate');
    }, 1000); // 1 —Å–µ–∫—É–Ω–¥–∞ –∑–∞–¥–µ—Ä–∂–∫–∏
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–∑–∏—Ü–∏–π —Ç–µ–∫—Å—Ç–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞
function updateTextPositions() {
  const textElements = document.querySelectorAll('.prize-text');
  const numSegments = rolls.length;
  const degPerSeg = 360 / numSegments;
  
  textElements.forEach((textDiv, i) => {
    const angle = (i * degPerSeg) + (degPerSeg / 2);
    
    // –ê–¥–∞–ø—Ç–∏–≤–Ω–æ–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –æ—Ç —Ü–µ–Ω—Ç—Ä–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–∞–∑–º–µ—Ä–∞ —ç–∫—Ä–∞–Ω–∞
    const screenWidth = window.innerWidth;
    let distanceFromCenter;
    if (screenWidth < 400) {
      distanceFromCenter = '100px';
    } else if (screenWidth < 600) {
      distanceFromCenter = '120px';
    } else if (screenWidth < 768) {
      distanceFromCenter = '140px';
    } else {
      distanceFromCenter = '150px';
    }
    
    textDiv.style.transform = `rotate(${angle}deg) translate(-50%, -${distanceFromCenter})`;
    
    // –¢–∞–∫–∂–µ –æ–±–Ω–æ–≤–ª—è–µ–º —Ä–∞–∑–±–∏–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞
    const text = rolls[i];
    let maxLength;
    if (screenWidth < 400) {
      maxLength = 8;
    } else if (screenWidth < 600) {
      maxLength = 10;
    } else if (screenWidth < 768) {
      maxLength = 12;
    } else {
      maxLength = 12;
    }
    
    if (text.length > maxLength) {
      const words = text.split(' ');
      if (words.length > 1) {
        textDiv.innerHTML = words.join('<br>');
      } else {
        const mid = Math.ceil(text.length / 2);
        textDiv.innerHTML = text.substring(0, mid) + '<br>' + text.substring(mid);
      }
    } else {
      textDiv.textContent = text;
    }
  });
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞
window.addEventListener('resize', updateTextPositions);

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤–∏–¥–∏–º–æ—Å—Ç—å—é —ç–ª–µ–º–µ–Ω—Ç–æ–≤
function hideControls() {
  const controls = document.querySelector('.controls');
  const input = document.getElementById('insta');
  const button = document.getElementById('spinBtn');
  
  // –°–∫—Ä—ã–≤–∞–µ–º –∫–æ–Ω—Ç—Ä–æ–ª—ã —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
  controls.classList.add('hidden');
  controls.classList.remove('visible');
  
  // –°–∫—Ä—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
  resultEl.classList.add('hidden');
  resultEl.classList.remove('visible');
  
  // –û—Ç–∫–ª—é—á–∞–µ–º –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
  input.disabled = true;
  button.disabled = true;
}

function showResult() {
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
  resultEl.classList.remove('hidden');
  resultEl.classList.add('visible');
}

function showControls() {
  const controls = document.querySelector('.controls');
  const input = document.getElementById('insta');
  const button = document.getElementById('spinBtn');
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–Ω—Ç—Ä–æ–ª—ã —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
  controls.classList.remove('hidden');
  controls.classList.add('visible');
  
  // –°–∫—Ä—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏ –ø—Ä–æ–º–æ-—Å–µ–∫—Ü–∏—é
  resultEl.classList.add('hidden');
  resultEl.classList.remove('visible');
  
  const promoSection = document.getElementById('promoSection');
  promoSection.classList.add('hide');
  promoSection.classList.remove('show');
  
  // –£–±–∏—Ä–∞–µ–º –∫–ª–∞—Å—Å hide –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏
  setTimeout(() => {
    promoSection.classList.remove('hide');
  }, 300);
  
  // –í–∫–ª—é—á–∞–µ–º –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
  input.disabled = false;
  button.disabled = false;
  
  // –û—á–∏—â–∞–µ–º –ø–æ–ª–µ –≤–≤–æ–¥–∞
  input.value = '';
}

function showPromo() {
  const controls = document.querySelector('.controls');
  const promoSection = document.getElementById('promoSection');
  
  // –°–∫—Ä—ã–≤–∞–µ–º –∫–æ–Ω—Ç—Ä–æ–ª—ã
  controls.classList.add('hidden');
  controls.classList.remove('visible');
  
  // –°–∫—Ä—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
  resultEl.classList.add('hidden');
  resultEl.classList.remove('visible');
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ–º–æ-—Å–µ–∫—Ü–∏—é
  promoSection.classList.add('show');
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', function() {
  startHeaderAnimation();
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–æ–Ω—Ç—Ä–æ–ª–æ–≤
  showControls();
});

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –∞–Ω–∏–º–∞—Ü–∏–∏
window.restartHeaderAnimation = function() {
  const animatedHeader = document.querySelector('.animated-header');
  if (animatedHeader) {
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é
    animatedHeader.classList.remove('animate');
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º –∑–∞–Ω–æ–≤–æ —á–µ—Ä–µ–∑ –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É
    setTimeout(() => {
      animatedHeader.classList.add('animate');
    }, 100);
  }
};

// --- –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–±—Ä–æ—Å–∞ fingerprint (–¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è) ---
// –û—Ç–∫—Ä–æ–π—Ç–µ –∫–æ–Ω—Å–æ–ª—å –∏ –≤–≤–µ–¥–∏—Ç–µ: resetFingerprint()
window.resetFingerprint = function() {
  localStorage.removeItem('wattasushi_device_fp');
  console.log('üîÑ Fingerprint —Å–±—Ä–æ—à–µ–Ω! –û–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –Ω–æ–≤–æ–≥–æ.');
};

// --- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ç–µ–∫—É—â–µ–≥–æ fingerprint ---
window.showFingerprint = function() {
  if (deviceFingerprint) {
    console.log('üîê –¢–µ–∫—É—â–∏–π fingerprint:', deviceFingerprint);
    return deviceFingerprint;
  } else {
    console.log('‚ö†Ô∏è Fingerprint –µ—â–µ –Ω–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω');
    return null;
  }
};

// --- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ –æ–±–ª–∞—Å—Ç–∏ –∫–ª–∏–∫–∞ –∫—Ä–µ–≤–µ—Ç–æ–∫ ---
window.debugShrimp = function() {
  const shrimps = document.querySelectorAll('.floating-emoji.shrimp');
  
  shrimps.forEach(shrimp => {
    const before = window.getComputedStyle(shrimp, '::before');
    
    // –í—Ä–µ–º–µ–Ω–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±–ª–∞—Å—Ç—å –∫–ª–∏–∫–∞
    shrimp.style.setProperty('--debug-mode', '1');
    const style = document.createElement('style');
    style.id = 'shrimp-debug';
    style.textContent = `
      .floating-emoji.shrimp::before {
        background: rgba(255, 0, 0, 0.2) !important;
        border: 2px dashed red !important;
      }
      .floating-emoji.shrimp {
        background: rgba(0, 255, 0, 0.1) !important;
      }
    `;
    document.head.appendChild(style);
    
   
  });
  
  return shrimps.length;
};

// --- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –æ—Ç–ª–∞–¥–∫–∏ ---
window.debugOff = function() {
  const style = document.getElementById('shrimp-debug');
  if (style) {
    style.remove();
  
  }
};

// --- –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫—Ä–µ–≤–µ—Ç–æ–∫ ---
window.testShrimp = function() {
  const shrimps = document.querySelectorAll('.floating-emoji.shrimp');
 
  
  shrimps.forEach((shrimp, index) => {
   
    
    // –î–æ–±–∞–≤–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –ø–æ–¥—Å–≤–µ—Ç–∫—É
    shrimp.style.background = 'rgba(255, 0, 0, 0.2)';
    shrimp.style.border = '2px solid red';
    
    setTimeout(() => {
      shrimp.style.background = '';
      shrimp.style.border = '';
    }, 3000);
  });
  
  return shrimps.length;
};

// --- –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–µ–≥–º–µ–Ω—Ç–æ–≤ —Ä—É–ª–µ—Ç–∫–∏ ---
function generateSegments() {
  const numSegments = rolls.length;
  const degPerSeg = 360 / numSegments;
  
 
  const colors = [
    '#12522D', 
    '#1a6d3f', 
    '#0d3d1f', 
    '#228b51', 
    '#12522D', 
    '#1a6d3f',
    '#0d3d1f',
    '#228b51'
  ];


  for (let i = 0; i < numSegments; i++) {
    const seg = document.createElement('div');
    seg.className = 'segment';
    const rotation = i * degPerSeg;
    
    seg.style.transform = `rotate(${rotation}deg) skewY(${-(90 - degPerSeg)}deg)`;
    seg.style.backgroundColor = colors[i % colors.length];
    
    wheel.appendChild(seg);
  }
  
  // –°–æ–∑–¥–∞–µ–º —Ç–µ–∫—Å—Ç –û–¢–î–ï–õ–¨–ù–û, –ø–æ–≤–µ—Ä—Ö —Å–µ–≥–º–µ–Ω—Ç–æ–≤
  for (let i = 0; i < numSegments; i++) {
    const textDiv = document.createElement('div');
    textDiv.className = 'prize-text';
    
    // –£–≥–æ–ª –¥–ª—è —Ç–µ–∫—Å—Ç–∞ (—Ü–µ–Ω—Ç—Ä —Å–µ–≥–º–µ–Ω—Ç–∞)
    const angle = (i * degPerSeg) + (degPerSeg / 2);
    
    // –ü–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å –∞–¥–∞–ø—Ç–∏–≤–Ω—ã–º —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ–º
    textDiv.style.position = 'absolute';
    textDiv.style.left = '50%';
    textDiv.style.top = '50%';
    
    // –ê–¥–∞–ø—Ç–∏–≤–Ω–æ–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –æ—Ç —Ü–µ–Ω—Ç—Ä–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–∞–∑–º–µ—Ä–∞ —ç–∫—Ä–∞–Ω–∞
    const screenWidth = window.innerWidth;
    let distanceFromCenter;
    if (screenWidth < 400) {
      distanceFromCenter = '100px'; // –ë–ª–∏–∂–µ –∫ —Ü–µ–Ω—Ç—Ä—É –¥–ª—è –æ—á–µ–Ω—å –º–∞–ª–µ–Ω—å–∫–∏—Ö —ç–∫—Ä–∞–Ω–æ–≤
    } else if (screenWidth < 600) {
      distanceFromCenter = '120px'; // –ë–ª–∏–∂–µ –∫ —Ü–µ–Ω—Ç—Ä—É –¥–ª—è –º–∞–ª–µ–Ω—å–∫–∏—Ö —ç–∫—Ä–∞–Ω–æ–≤
    } else if (screenWidth < 768) {
      distanceFromCenter = '140px'; // –°—Ä–µ–¥–Ω–µ–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –ø–ª–∞–Ω—à–µ—Ç–æ–≤
    } else {
      distanceFromCenter = '150px'; // –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –±–æ–ª—å—à–∏—Ö —ç–∫—Ä–∞–Ω–æ–≤
    }
    
    textDiv.style.transform = `rotate(${angle}deg) translate(-50%, -${distanceFromCenter})`;
    textDiv.style.transformOrigin = '0 0';
    
    // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç (—Ä–∞–∑–±–∏–≤–∞–µ–º –¥–ª–∏–Ω–Ω—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è)
    const text = rolls[i];
    
    // –ê–¥–∞–ø—Ç–∏–≤–Ω–∞—è –¥–ª–∏–Ω–∞ –¥–ª—è —Ä–∞–∑–±–∏–µ–Ω–∏—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–∞–∑–º–µ—Ä–∞ —ç–∫—Ä–∞–Ω–∞
    let maxLength;
    if (screenWidth < 400) {
      maxLength = 8; // –ë–æ–ª–µ–µ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ–µ —Ä–∞–∑–±–∏–µ–Ω–∏–µ –¥–ª—è –æ—á–µ–Ω—å –º–∞–ª–µ–Ω—å–∫–∏—Ö —ç–∫—Ä–∞–Ω–æ–≤
    } else if (screenWidth < 600) {
      maxLength = 10; // –ë–æ–ª–µ–µ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ–µ —Ä–∞–∑–±–∏–µ–Ω–∏–µ –¥–ª—è –º–∞–ª–µ–Ω—å–∫–∏—Ö —ç–∫—Ä–∞–Ω–æ–≤
    } else if (screenWidth < 768) {
      maxLength = 12; // –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ —Ä–∞–∑–±–∏–µ–Ω–∏–µ –¥–ª—è –ø–ª–∞–Ω—à–µ—Ç–æ–≤
    } else {
      maxLength = 12; // –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ —Ä–∞–∑–±–∏–µ–Ω–∏–µ –¥–ª—è –±–æ–ª—å—à–∏—Ö —ç–∫—Ä–∞–Ω–æ–≤
    }
    
    if (text.length > maxLength) {
      // –†–∞–∑–±–∏–≤–∞–µ–º –Ω–∞ 2 —Å—Ç—Ä–æ–∫–∏ –¥–ª—è –¥–ª–∏–Ω–Ω—ã—Ö –Ω–∞–∑–≤–∞–Ω–∏–π
      const words = text.split(' ');
      if (words.length > 1) {
        textDiv.innerHTML = words.join('<br>');
      } else {
        // –ï—Å–ª–∏ —ç—Ç–æ –æ–¥–Ω–æ —Å–ª–æ–≤–æ, —Ä–∞–∑–±–∏–≤–∞–µ–º –ø–æ —Å–∏–º–≤–æ–ª–∞–º
        const mid = Math.ceil(text.length / 2);
        textDiv.innerHTML = text.substring(0, mid) + '<br>' + text.substring(mid);
      }
    } else {
      textDiv.textContent = text;
    }
    
    wheel.appendChild(textDiv);
    
    
  }
  
 
}

// --- –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ fingerprint —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ ---
async function generateFingerprint() {
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —É–∂–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π fingerprint
  const savedFingerprint = localStorage.getItem('wattasushi_device_fp');
  
  if (savedFingerprint) {
    deviceFingerprint = savedFingerprint;
    console.log('üîê Device Fingerprint (saved):', deviceFingerprint.substring(0, 16) + '...');
    return;
  }
  
  // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤—ã–π fingerprint —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
  const canvas = document.createElement('canvas');
  canvas.width = 200;
  canvas.height = 50;
  const ctx = canvas.getContext('2d');
  
  // –†–∏—Å—É–µ–º –±–æ–ª–µ–µ —Å–ª–æ–∂–Ω—ã–π –ø–∞—Ç—Ç–µ—Ä–Ω –¥–ª—è —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç–∏
  ctx.textBaseline = 'top';
  ctx.font = '14px Arial';
  ctx.fillStyle = '#f60';
  ctx.fillRect(125, 1, 62, 20);
  ctx.fillStyle = '#069';
  ctx.fillText('WattaSushiüç±', 2, 15);
  ctx.fillStyle = 'rgba(102, 204, 0, 0.7)';
  ctx.fillText('Canvas Fingerprint', 4, 17);
  
  // –°–æ–±–∏—Ä–∞–µ–º —Å—Ç–∞–±–∏–ª—å–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã (–±–µ–∑ canvas)
  const components = [
    navigator.userAgent,
    navigator.language,
    navigator.languages ? navigator.languages.join(',') : '',
    new Date().getTimezoneOffset(),
    screen.width + 'x' + screen.height + 'x' + screen.colorDepth,
    screen.availWidth + 'x' + screen.availHeight,
    navigator.hardwareConcurrency || 'unknown',
    navigator.deviceMemory || 'unknown',
    navigator.platform,
    navigator.vendor || '',
    navigator.maxTouchPoints || 0,
    // Canvas –¥–æ–±–∞–≤–ª—è–µ–º –≤ –∫–æ–Ω—Ü–µ
    canvas.toDataURL()
  ];
  
  const fingerprint = await hashString(components.join('###WATTA###'));
  deviceFingerprint = fingerprint;
  
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ localStorage –¥–ª—è —Å–ª–µ–¥—É—é—â–∏—Ö –≤–∏–∑–∏—Ç–æ–≤
  try {
    localStorage.setItem('wattasushi_device_fp', fingerprint);
   
  } catch (e) {
    console.warn('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å fingerprint:', e);
  }
}

async function hashString(str) {
  const buffer = new TextEncoder().encode(str);
  const hashBuffer = await crypto.subtle.digest('SHA-256', buffer);
  const hashArray = Array.from(new Uint8Array(hashBuffer));
  return hashArray.map(b => b.toString(16).padStart(2, '0')).join('');
}

// --- –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ —Ä—É–ª–µ—Ç–∫–∏ ---
spinBtn.onclick = async () => {
  if (isSpinning) return;
  
  const insta = document.getElementById('insta').value.trim().replace('@', '');
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∞–¥–º–∏–Ω-–∫–æ–¥
  if (insta.toLowerCase() === 'admin') {
    openAdminPanel();
    return;
  }
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∫–∏
  if (insta.toLowerCase() === 'disableadmin') {
    await disableAdminPermanently();
    return;
  }
  
  if (!insta) {
    alert('‚ùå –ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –≤–∞—à Instagram!');
    return;
  }
  
  if (insta.length < 3) {
    alert('‚ùå Instagram –ø–æ–≤–∏–Ω–µ–Ω –º—ñ—Å—Ç–∏—Ç–∏ –º—ñ–Ω—ñ–º—É–º 3 —Å–∏–º–≤–æ–ª–∏!');
    return;
  }

  // –°–∫—Ä—ã–≤–∞–µ–º –∫–æ–Ω—Ç—Ä–æ–ª—ã –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø—Ä–æ–≤–µ—Ä–∫–∏
  hideControls();
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø—Ä–æ–≤–µ—Ä–∫–∏
  resultEl.textContent = 'üîç –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞...';
  resultEl.style.color = '#12522D';
  showResult();
  
  try {
    const checkResponse = await fetch(`${API_URL}/check`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ 
        fingerprint: deviceFingerprint,
        instagram: insta
      })
    });
    
    const checkResult = await checkResponse.json();
    
    if (!checkResult.allowed) {
      resultEl.textContent = '‚ö†Ô∏è –í–∏ –≤–∂–µ –≤–∑—è–ª–∏ —É—á–∞—Å—Ç—å –≤ —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ!';
      resultEl.style.color = '#e74c3c';
      
      let reason = '';
      if (checkResult.reason === 'fingerprint') {
        reason = '–í–∏ –≤–∂–µ –∫—Ä—É—Ç–∏–ª–∏ —Ä—É–ª–µ—Ç–∫—É –∑ —Ü—å–æ–≥–æ –ø—Ä–∏—Å—Ç—Ä–æ—é!';
      } else if (checkResult.reason === 'instagram') {
        reason = '–¶–µ–π Instagram –∞–∫–∫–∞—É–Ω—Ç –≤–∂–µ –≤–∑—è–≤ —É—á–∞—Å—Ç—å!';
      }
      
      alert(`‚ö†Ô∏è ${reason}\n\n` +
            `Instagram: @${checkResult.data.instagram}\n` +
            `–ü—Ä–∏–∑: ${checkResult.data.prize}\n` +
            `–î–∞—Ç–∞: ${checkResult.data.timestamp}`);
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ–º–æ-—Å–µ–∫—Ü–∏—é
      setTimeout(() => {
        showPromo();
      }, 1000);
      return;
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏:', error);
    alert('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑ —Å–µ—Ä–≤–µ—Ä–æ–º. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ —ñ–Ω—Ç–µ—Ä–Ω–µ—Ç—É.');
    resultEl.textContent = '‚ùå –ü–æ–º–∏–ª–∫–∞ –∑ —Å–µ—Ä–≤–µ—Ä–æ–º';
    resultEl.style.color = '#e74c3c';
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ–º–æ-—Å–µ–∫—Ü–∏—é
    setTimeout(() => {
      showPromo();
    }, 1000);
    return;
  }

  // –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ–∫—Ä—É—Ç–∫—É
  isSpinning = true;
  resultEl.textContent = 'üé∞ –ö—Ä—É—Ç–∏–º–æ...';
  resultEl.style.color = '#12522D';

  const numSegments = rolls.length;
  const degPerSeg = 360 / numSegments;
  const randomIndex = Math.floor(Math.random() * numSegments);
  const stopAngle = 3600 + (randomIndex * degPerSeg) + degPerSeg / 2;

  wheel.style.transition = 'transform 4s cubic-bezier(0.25, 0.1, 0.25, 1)';
  wheel.style.transform = `rotate(-${stopAngle}deg)`;

  setTimeout(async () => {
    const prize = rolls[randomIndex];
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
    resultEl.textContent = `üéâ –í–∏ –≤–∏–≥—Ä–∞–ª–∏: ${prize}!`;
    resultEl.style.color = '#12522D';
    
    await saveResult(insta, prize);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —á–µ—Ä–µ–∑ –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É
    setTimeout(() => {
      showPrizeModal(prize);
    }, 500);
    
    isSpinning = false;
  }, 4100);
};

async function saveResult(instagram, prize) {
  try {
    const response = await fetch(`${API_URL}/save`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        fingerprint: deviceFingerprint,
        instagram: instagram,
        prize: prize
      })
    });
    
    const result = await response.json();
    
    if (result.success) {
      console.log('‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç –∑–±–µ—Ä–µ–∂–µ–Ω–∏–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ');
      
      if (result.is_duplicate) {
        console.warn('‚ö†Ô∏è –í–∏—è–≤–ª–µ–Ω–æ –ø–æ–≤—Ç–æ—Ä–Ω—É —Å–ø—Ä–æ–±—É:', result.duplicate_reason);
      }
    } else {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É');
    }
  } catch (error) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É:', error);
  }
}

function showPrizeModal(prize) {
  const modal = document.getElementById('prizeModal');
  const prizeText = document.getElementById('prizeText');
  const secretHint = document.getElementById('secretHint');
  
  prizeText.textContent = `–í–∏ –≤–∏–≥—Ä–∞–ª–∏: ${prize}!`;
  
  const hintShown = localStorage.getItem('shrimpHintShown');
  
  if (!hintShown) {     
    secretHint.style.display = 'block';
    localStorage.setItem('shrimpHintShown', 'true');
   
  } else {
    // –°–∫—Ä—ã–≤–∞–µ–º –ø–æ–¥—Å–∫–∞–∑–∫—É –µ—Å–ª–∏ —É–∂–µ –ø–æ–∫–∞–∑—ã–≤–∞–ª–∏
    secretHint.style.display = 'none';
  }
  
  modal.classList.add('active');
}

window.closePrizeModal = function() {
  const modal = document.getElementById('prizeModal');
  modal.classList.remove('active');
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ–º–æ-—Å–µ–∫—Ü–∏—é –ø–æ—Å–ª–µ –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
  setTimeout(() => {
    showPromo();
  }, 300); // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –ø–ª–∞–≤–Ω–æ—Å—Ç–∏
};

// --- –°–µ–∫—Ä–µ—Ç–Ω–∞—è –º–∏–Ω–∏–∏–≥—Ä–∞ ---
function openMinigame() {
 
  const overlay = document.getElementById('minigameOverlay');
  const startTitle = document.getElementById('gameStartTitle');
  const startText1 = document.getElementById('gameStartText1');
  const startText2 = document.getElementById('gameStartText2');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–æ–∫–∞–∑—ã–≤–∞–ª–∏ –ª–∏ –ø–æ–¥—Å–∫–∞–∑–∫—É –ø—Ä–æ –∫—Ä–µ–≤–µ—Ç–∫—É
  const hintShown = localStorage.getItem('shrimpHintShown');
  
  if (!hintShown) {
    startTitle.textContent = 'ü§´ –¢—Å—Å...';
    startText1.textContent = '–¢–∏ —Å—Ö–æ–∂–µ –∑–Ω–∞–π—à–æ–≤ —Å–µ–∫—Ä–µ—Ç–Ω—É –º—ñ–Ω—ñ–≥—Ä—É —Ä–∞–Ω—ñ—à–µ –Ω—ñ–∂ —Ç—Ä–µ–±–∞!';
    startText2.textContent = ' –©–∞—Å—Ç–∏ –≤ —Ä–∏–±–æ–ª–æ–≤–ª—ñ! üé£';
  } else {
    startTitle.textContent = 'üé£ –†–∏–±–æ–ª–æ–≤–ª—è!';
    startText1.textContent = '–í–∏ –∑–Ω–∞–π—à–ª–∏ —Å–µ–∫—Ä–µ—Ç–Ω—É –º—ñ–Ω—ñ–≥—Ä—É!';
    startText2.innerHTML = '–¢–∞–ø–∞–π—Ç–µ –ø–æ –∫–Ω–æ–ø—Ü—ñ, —â–æ–± —É—Ç—Ä–∏–º–∞—Ç–∏<br>—ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –≤ –∑–µ–ª–µ–Ω—ñ–π –∑–æ–Ω—ñ!';
  }

  overlay.classList.add('active');
  
}

window.closeMinigame = function() {
  const overlay = document.getElementById('minigameOverlay');
  overlay.classList.remove('active');
  
  // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–≥—Ä—É –µ—Å–ª–∏ –æ–Ω–∞ –∏–¥–µ—Ç
  if (gameState.isPlaying) {
    stopGame();
  }
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ä—Ç–æ–≤—ã–π —ç–∫—Ä–∞–Ω
  document.getElementById('gameStart').style.display = 'block';
  document.getElementById('gamePlay').style.display = 'none';
  document.getElementById('gameEnd').style.display = 'none';
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ–º–æ-—Å–µ–∫—Ü–∏—é –ø–æ—Å–ª–µ –∑–∞–∫—Ä—ã—Ç–∏—è –º–∏–Ω–∏–∏–≥—Ä—ã
  setTimeout(() => {
    showPromo();
  }, 300);
  
  
}

  const gameState = {
  isPlaying: false,
  score: 0,
  time: 10,
  indicatorPosition: 50, // –ø—Ä–æ—Ü–µ–Ω—Ç –≤—ñ–¥ –≤–∏—Å–æ—Ç–∏
  indicatorVelocity: 0,
  zonePosition: 50,
  gameLoop: null,
  timerInterval: null
};

window.startFishingGame = function() {

  document.getElementById('gameStart').style.display = 'none';
  document.getElementById('gamePlay').style.display = 'block';
  document.getElementById('gameEnd').style.display = 'none';
  
  
  gameState.isPlaying = true;
  gameState.score = 0;
  gameState.time = 10;
  gameState.indicatorPosition = 50;
  gameState.indicatorVelocity = 0;
  gameState.zonePosition = Math.random() * 60 + 20; // 20-80%
  
  
  document.getElementById('gameScore').textContent = '0';
  document.getElementById('gameTimer').textContent = '10';
  
   
  const tapButton = document.getElementById('tapButton');
  
  
  tapButton.addEventListener('touchstart', function(e) {
    e.preventDefault();
    handleTap();
  }, { passive: false });
  
 
  tapButton.onclick = handleTap;
  
  
  startGameLoop();
  
 
  gameState.timerInterval = setInterval(() => {
    gameState.time--;
    document.getElementById('gameTimer').textContent = gameState.time;
    
    if (gameState.time <= 0) {
      endGame();
    }
  }, 1000);
  
 
}

function handleTap() {
  if (!gameState.isPlaying) return;
  
 
  gameState.indicatorVelocity = -2.5; // –ë—É–ª–æ -4, —Å—Ç–∞–ª–æ -2.5 (—Å–ª–∞–±–µ–µ)
}

function startGameLoop() {
  const barHeight = 400; // –≤–∏—Å–æ—Ç–∞ –≤ –ø—ñ–∫—Å–µ–ª—è—Ö
  const indicator = document.getElementById('fishingIndicator');
  const zone = document.getElementById('fishingZone');
  const zoneHeight = 80; // –≤–∏—Å–æ—Ç–∞ –∑–æ–Ω–∏ –≤ –ø—ñ–∫—Å–µ–ª—è—Ö
  
  gameState.gameLoop = setInterval(() => {
    if (!gameState.isPlaying) return;
    
    
    gameState.indicatorVelocity += 0.3;
    
   
    gameState.indicatorPosition += gameState.indicatorVelocity;
    
   
    if (gameState.indicatorPosition < 0) {
      gameState.indicatorPosition = 0;
      gameState.indicatorVelocity = 0;
    }
    if (gameState.indicatorPosition > 100) {
      gameState.indicatorPosition = 100;
      gameState.indicatorVelocity = 0;
    }
    
   
    if (Math.random() < 0.02) { // 2% —à–∞–Ω—Å –∫–∞–∂–¥—ã–π –∫–∞–¥—Ä
      gameState.zonePosition = Math.random() * 60 + 20; // 20-80%
    }
    
   
    indicator.style.top = `${gameState.indicatorPosition}%`;
    zone.style.top = `${gameState.zonePosition}%`;
    
   
    const indicatorTop = gameState.indicatorPosition;
    const zoneTop = gameState.zonePosition;
    const zoneBottom = gameState.zonePosition + (zoneHeight / barHeight * 100);
    
    if (indicatorTop >= zoneTop && indicatorTop <= zoneBottom) {
     
      gameState.score += 1;
      document.getElementById('gameScore').textContent = gameState.score;
      
      
      zone.style.background = 'rgba(76, 175, 80, 0.6)';
    } else {
      zone.style.background = 'rgba(76, 175, 80, 0.4)';
    }
  }, 1000 / 60); 
}

function stopGame() {
  gameState.isPlaying = false;
  clearInterval(gameState.gameLoop);
  clearInterval(gameState.timerInterval);
}

async function endGame() {
  stopGame();
  
  
  document.getElementById('gamePlay').style.display = 'none';
  document.getElementById('gameEnd').style.display = 'block';
  
  
  document.getElementById('finalScore').textContent = gameState.score;
  
  
  const endTitle = document.getElementById('gameEndTitle');
  const endEmoji = document.getElementById('gameEndEmoji');
  
  if (gameState.score >= 500) {
    endTitle.textContent = 'üèÜ –ù–µ–π–º–æ–≤—ñ—Ä–Ω–æ!';
    endEmoji.textContent = 'ü¶ê‚ú®';
  } else if (gameState.score >= 300) {
    endTitle.textContent = 'üéâ –ß—É–¥–æ–≤–æ!';
    endEmoji.textContent = 'ü¶ê';
  } else if (gameState.score >= 150) {
    endTitle.textContent = 'üòä –î–æ–±—Ä–µ!';
    endEmoji.textContent = 'üêü';
  } else {
    endTitle.textContent = 'üòÖ –°–ø—Ä–æ–±—É–π —â–µ!';
    endEmoji.textContent = 'ü¶Ä';
  }
  
  
  await saveMinigameScore(gameState.score);
  
  
}


function createFloatingEmojis() {
  const emojis = ['üç£', 'üç±', 'ü¶ê', 'ü¶Ä', 'üêü', 'ü•¢', 'üçô'];
          
  const isMobile = window.innerWidth <= 768;
  const isTablet = window.innerWidth <= 1024;
  const emojiCount = isMobile ? 10 : (isTablet ? 14 : 18); // –ë–æ–ª—å—à–µ —ç–º–æ–¥–∂–∏ –¥–ª—è –ª—É—á—à–µ–≥–æ —ç—Ñ—Ñ–µ–∫—Ç–∞

  // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —ç–º–æ–¥–∂–∏, —á—Ç–æ–±—ã –æ–Ω–∏ –Ω–µ –≤–ª–∏—è–ª–∏ –Ω–∞ —Ä–∞–∑–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã
  let emojiContainer = document.getElementById('emoji-container');
  if (!emojiContainer) {
    emojiContainer = document.createElement('div');
    emojiContainer.id = 'emoji-container';
    emojiContainer.style.position = 'fixed';
    emojiContainer.style.top = '0';
    emojiContainer.style.left = '0';
    emojiContainer.style.width = '100vw';
    emojiContainer.style.height = '100vh';
    emojiContainer.style.pointerEvents = 'none';
    emojiContainer.style.zIndex = '0';
    emojiContainer.style.overflow = 'hidden';
    document.body.appendChild(emojiContainer);
  } else {
    // –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ —ç–º–æ–¥–∂–∏ –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–µ
    emojiContainer.innerHTML = '';
  }

  const emojiPool = [...emojis];
  
  // –†–û–í–ù–û 3 –∫—Ä–µ–≤–µ—Ç–∫–∏ –Ω–∞ –≤—Å–µ—Ö —ç–∫—Ä–∞–Ω–∞—Ö
  const shrimpCount = 3; // –í—Å–µ–≥–¥–∞ 3 –∫—Ä–µ–≤–µ—Ç–∫–∏
  for (let i = 0; i < shrimpCount; i++) {
    emojiPool.push('ü¶ê');
  }
  
  // –ó–∞–ø–æ–ª–Ω—è–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–º–∏ —ç–º–æ–¥–∂–∏
  while (emojiPool.length < emojiCount) {
    emojiPool.push(emojis[Math.floor(Math.random() * emojis.length)]);
  }

  for (let i = emojiPool.length - 1; i > 0; i--) {
    const j = Math.floor(Math.random() * (i + 1));
    [emojiPool[i], emojiPool[j]] = [emojiPool[j], emojiPool[i]];
  }

  for (let i = 0; i < emojiCount; i++) {
    const emojiDiv = document.createElement('div');
    emojiDiv.className = 'floating-emoji';
    const emoji = emojiPool[i];
    emojiDiv.textContent = emoji;

    if (emoji === 'ü¶ê') {
      emojiDiv.classList.add('shrimp');

      let isActivated = false;

      // –£–ø—Ä–æ—â–µ–Ω–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏
      const activateShrimp = function() {
        if (isActivated) return;
        isActivated = true;
        

        // –í–∏–±—Ä–∞—Ü–∏—è –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö
        if (navigator.vibrate) {
          navigator.vibrate(50);
        }

        // –í–∏–∑—É–∞–ª—å–Ω—ã–π —ç—Ñ—Ñ–µ–∫—Ç
        emojiDiv.style.transition = 'all 0.7s cubic-bezier(0.68, -0.55, 0.265, 1.55)';
        emojiDiv.style.animation = 'none';
        emojiDiv.style.transform = 'scale(3) rotate(1080deg)';
        emojiDiv.style.filter = 'drop-shadow(0 0 50px rgba(255,235,59,1))';
        emojiDiv.style.zIndex = '10000';
        emojiDiv.style.opacity = '1';

        // –û—Ç–∫—Ä—ã–≤–∞–µ–º –º–∏–Ω–∏–∏–≥—Ä—É
        setTimeout(() => {
          try {
            openMinigame();
          } catch (err) {
          
          }
        }, 200);

        // –°–±—Ä–æ—Å —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
        setTimeout(() => {
          isActivated = false;
          emojiDiv.style.transition = '';
          emojiDiv.style.transform = '';
          emojiDiv.style.filter = '';
          emojiDiv.style.zIndex = '';
          emojiDiv.style.opacity = '';
          emojiDiv.style.animation = '';
        }, 3000);
      };

      // –ü–†–ï–î–û–¢–í–†–ê–©–ê–ï–ú –ó–£–ú –ù–ê –ö–†–ï–í–ï–¢–ö–ê–•
      emojiDiv.addEventListener('touchstart', function(e) {
        e.preventDefault(); // –ë–ª–æ–∫–∏—Ä—É–µ–º –∑—É–º –Ω–∞ –∫—Ä–µ–≤–µ—Ç–∫–∞—Ö
      }, { passive: false });

      // –ü–†–û–°–¢–ê–Ø –æ–±—Ä–∞–±–æ—Ç–∫–∞ touch - —Ç–æ–ª—å–∫–æ touchend
      emojiDiv.addEventListener('touchend', function(e) {
        e.preventDefault();
        e.stopPropagation();
        activateShrimp();
      }, { passive: false });

      // Click –¥–ª—è –¥–µ—Å–∫—Ç–æ–ø–∞
      emojiDiv.addEventListener('click', function(e) {
        e.preventDefault();
        e.stopPropagation();
        activateShrimp();
      }, { passive: false });

    
    }

    // --- –≤–∏–∑—É–∞–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã ---
    // –ö—Ä–µ–≤–µ—Ç–∫–∏ —Ä–∞–∑–º–µ—â–∞–µ–º –ø–æ –±–æ–∫–∞–º –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ –Ω–∞–∂–∞—Ç–∏—è
    const randomX = (emoji === 'ü¶ê') 
      ? (i % 2 === 0 ? 15 : 75)  // –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ–∑–∏—Ü–∏–∏: 15% –∏–ª–∏ 75%
      : 20 + (i * 5) % 60;      // –†–∞–≤–Ω–æ–º–µ—Ä–Ω–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ 20-80%
    
    emojiDiv.style.left = `${randomX}vw`;
    emojiDiv.style.top = '100vh'; // –ù–∞—á–∏–Ω–∞–µ–º —Å–Ω–∏–∑—É —ç–∫—Ä–∞–Ω–∞
    emojiDiv.style.animationDelay = `-${i * 3}s`; // –£–≤–µ–ª–∏—á–µ–Ω–Ω—ã–µ –∑–∞–¥–µ—Ä–∂–∫–∏ –¥–ª—è –±–æ–ª–µ–µ –ø–ª–∞–≤–Ω–æ–≥–æ –ø–æ—è–≤–ª–µ–Ω–∏—è
    
    // –ú–µ–¥–ª–µ–Ω–Ω—ã–µ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∞–Ω–∏–º–∞—Ü–∏–∏ –¥–ª—è –ø–ª–∞–≤–Ω–æ–≥–æ –¥–≤–∏–∂–µ–Ω–∏—è
    const duration = (emoji === 'ü¶ê') 
      ? 45  // –û—á–µ–Ω—å –º–µ–¥–ª–µ–Ω–Ω–æ –¥–ª—è –∫—Ä–µ–≤–µ—Ç–æ–∫
      : 35;  // –ú–µ–¥–ª–µ–Ω–Ω–æ –¥–ª—è –æ–±—ã—á–Ω—ã—Ö —ç–º–æ–¥–∂–∏
    
    emojiDiv.style.animationDuration = `${duration}s`;
    
    // –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–µ —Å–º–µ—â–µ–Ω–∏—è
    const xOffset = (emoji === 'ü¶ê')
      ? (i % 2 === 0 ? -30 : 30)  // –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–º–µ—â–µ–Ω–∏—è –¥–ª—è –∫—Ä–µ–≤–µ—Ç–æ–∫
      : (i % 3 === 0 ? -50 : (i % 3 === 1 ? 0 : 50));  // –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–º–µ—â–µ–Ω–∏—è –¥–ª—è –æ–±—ã—á–Ω—ã—Ö
    
    emojiDiv.style.setProperty('--x-offset', `${xOffset}px`);
    
    if (emoji !== 'ü¶ê') {
      emojiDiv.style.fontSize = `${45}px`; // –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ä–∞–∑–º–µ—Ä
      emojiDiv.style.opacity = 0.15; // –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å
    }

    emojiContainer.appendChild(emojiDiv);
  }

  console.log('‚ú® –ü–ª–∞–≤–∞—é—â–∏–µ —ç–º–æ–¥–∂–∏ —Å–æ–∑–¥–∞–Ω—ã');
}

// --- –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å ---
function addAdminLog(message, type = 'success') {
  const log = document.getElementById('adminLog');
  const entry = document.createElement('div');
  entry.className = `admin-log-entry ${type}`;
  const timestamp = new Date().toLocaleTimeString();
  entry.textContent = `[${timestamp}] ${message}`;
  log.appendChild(entry);
  log.scrollTop = log.scrollHeight;
}

async function openAdminPanel() {
  const panel = document.getElementById('adminPanel');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –æ—Ç–∫–ª—é—á–µ–Ω–∞ –ª–∏ –∞–¥–º–∏–Ω–∫–∞
  try {
    const response = await fetch(`${API_URL}/admin/status`);
    const data = await response.json();
    
    if (!data.enabled) {
      alert('‚õî –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –æ—Ç–∫–ª—é—á–µ–Ω–∞ –Ω–∞–≤—Å–µ–≥–¥–∞!');
      document.getElementById('insta').value = '';
      return;
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –∞–¥–º–∏–Ω–∫–∏:', error);
  }
  
  panel.classList.add('active');
  document.getElementById('insta').value = '';
  
  // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
  await loadAdminStats();
  addAdminLog('–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –æ—Ç–∫—Ä—ã—Ç–∞', 'success');
}

window.closeAdminPanel = function() {
  const panel = document.getElementById('adminPanel');
  panel.classList.remove('active');
  document.getElementById('adminLog').innerHTML = '';
};

async function loadAdminStats() {
  try {
    const response = await fetch(`${API_URL}/admin/stats`);
    const data = await response.json();
    
    document.getElementById('totalSpins').textContent = data.total_spins || 0;
    document.getElementById('totalFingerprints').textContent = data.total_fingerprints || 0;
    document.getElementById('totalInstagram').textContent = data.total_instagram || 0;
    
    addAdminLog('–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞', 'success');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', error);
    addAdminLog('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏', 'error');
  }
}

window.clearFingerprints = async function() {
  if (!confirm('‚ö†Ô∏è –í—ã —É–≤–µ—Ä–µ–Ω—ã? –≠—Ç–æ —É–¥–∞–ª–∏—Ç –≤—Å–µ fingerprints!')) return;
  
  try {
    const response = await fetch(`${API_URL}/admin/clear/fingerprints`, {
      method: 'POST'
    });
    const data = await response.json();
    
    if (data.success) {
      addAdminLog(`‚úÖ –£–¥–∞–ª–µ–Ω–æ fingerprints: ${data.deleted}`, 'success');
      await loadAdminStats();
    } else {
      addAdminLog('‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è fingerprints', 'error');
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
    addAdminLog('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞', 'error');
  }
};

window.clearInstagram = async function() {
  if (!confirm('‚ö†Ô∏è –í—ã —É–≤–µ—Ä–µ–Ω—ã? –≠—Ç–æ —É–¥–∞–ª–∏—Ç –≤—Å–µ Instagram –∞–∫–∫–∞—É–Ω—Ç—ã!')) return;
  
  try {
    const response = await fetch(`${API_URL}/admin/clear/instagram`, {
      method: 'POST'
    });
    const data = await response.json();
    
    if (data.success) {
      addAdminLog(`‚úÖ –£–¥–∞–ª–µ–Ω–æ Instagram: ${data.deleted}`, 'success');
      await loadAdminStats();
    } else {
      addAdminLog('‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è Instagram', 'error');
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
    addAdminLog('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞', 'error');
  }
};

window.clearAll = async function() {
  if (!confirm('‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï! –≠—Ç–æ —É–¥–∞–ª–∏—Ç –í–°–ï –¥–∞–Ω–Ω—ã–µ –±–µ–∑–≤–æ–∑–≤—Ä–∞—Ç–Ω–æ!')) return;
  if (!confirm('–í—ã —Ç–æ—á–Ω–æ —É–≤–µ—Ä–µ–Ω—ã? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–æ–±—Ä–∞—Ç–∏–º–æ!')) return;
  
  try {
    const response = await fetch(`${API_URL}/admin/clear/all`, {
      method: 'POST'
    });
    const data = await response.json();
    
    if (data.success) {
      addAdminLog(`‚úÖ –£–¥–∞–ª–µ–Ω–æ –≤—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π: ${data.deleted}`, 'warning');
      await loadAdminStats();
    } else {
      addAdminLog('‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö', 'error');
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
    addAdminLog('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞', 'error');
  }
};

window.exportData = async function() {
  try {
    const response = await fetch(`${API_URL}/admin/export`);
    const data = await response.json();
    
    // –°–æ–∑–¥–∞–µ–º blob –∏ —Å–∫–∞—á–∏–≤–∞–µ–º
    const blob = new Blob([JSON.stringify(data, null, 2)], { type: 'application/json' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = `roulette_data_${Date.now()}.json`;
    a.click();
    URL.revokeObjectURL(url);
    
    addAdminLog('‚úÖ –î–∞–Ω–Ω—ã–µ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã', 'success');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
    addAdminLog('‚ùå –û—à–∏–±–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞', 'error');
  }
};

window.disableAdmin = async function() {
  if (!confirm('‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï! –≠—Ç–æ –ù–ê–í–°–ï–ì–î–ê –æ—Ç–∫–ª—é—á–∏—Ç –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å!')) return;
  if (!confirm('–í—ã —Ç–æ—á–Ω–æ —É–≤–µ—Ä–µ–Ω—ã? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –ù–ï–û–ë–†–ê–¢–ò–ú–û!')) return;
  if (!confirm('–ü–û–°–õ–ï–î–ù–ï–ï –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï! –ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –¥–æ—Å—Ç—É–ø –±—É–¥–µ—Ç –Ω–µ–≤–æ–∑–º–æ–∂–µ–Ω!')) return;
  
  try {
    const response = await fetch(`${API_URL}/admin/disable`, {
      method: 'POST'
    });
    const data = await response.json();
    
    if (data.success) {
      addAdminLog('üîí –ê–î–ú–ò–ù-–ü–ê–ù–ï–õ–¨ –û–¢–ö–õ–Æ–ß–ï–ù–ê –ù–ê–í–°–ï–ì–î–ê', 'error');
      alert('üîí –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –æ—Ç–∫–ª—é—á–µ–Ω–∞ –Ω–∞–≤—Å–µ–≥–¥–∞! –ë–æ–ª—å—à–µ –≤—Ö–æ–¥ –Ω–µ–≤–æ–∑–º–æ–∂–µ–Ω.');
      setTimeout(() => {
        closeAdminPanel();
      }, 2000);
    } else {
      addAdminLog('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –∞–¥–º–∏–Ω–∫–∏', 'error');
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
    addAdminLog('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞', 'error');
  }
};

async function disableAdminPermanently() {
  if (!confirm('‚ö†Ô∏è –í—ã –≤–≤–æ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –û–¢–ö–õ–Æ–ß–ï–ù–ò–Ø –ê–î–ú–ò–ù–ö–ò! –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å?')) return;
  if (!confirm('–≠—Ç–æ –ù–ê–í–°–ï–ì–î–ê –æ—Ç–∫–ª—é—á–∏—Ç –¥–æ—Å—Ç—É–ø –∫ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏. –í—ã —É–≤–µ—Ä–µ–Ω—ã?')) return;
  
  try {
    const response = await fetch(`${API_URL}/admin/disable`, {
      method: 'POST'
    });
    const data = await response.json();
    
    if (data.success) {
      alert('üîí –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å —É—Å–ø–µ—à–Ω–æ –æ—Ç–∫–ª—é—á–µ–Ω–∞ –Ω–∞–≤—Å–µ–≥–¥–∞!\n\n–¢–µ–ø–µ—Ä—å –Ω–∏–∫—Ç–æ –Ω–µ —Å–º–æ–∂–µ—Ç –ø–æ–ª—É—á–∏—Ç—å –∫ –Ω–µ–π –¥–æ—Å—Ç—É–ø.');
      document.getElementById('insta').value = '';
    } else {
      alert('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –∞–¥–º–∏–Ω–∫–∏');
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
    alert('‚ùå –û—à–∏–±–∫–∞ —Å–≤—è–∑–∏ —Å —Å–µ—Ä–≤–µ—Ä–æ–º');
  }
  
  document.getElementById('insta').value = '';
}

// --- –ó–∞–≥—Ä—É–∑–∫–∞ –ª—É—á—à–µ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –∏–≥—Ä–æ–∫–∞ ---
async function loadPlayerBestScore() {
  try {
    const response = await fetch(`${API_URL}/minigame/player-score?fingerprint=${deviceFingerprint}`);
    const data = await response.json();
    
    if (data.success && data.best_score !== null) {
      localStorage.setItem('playerBestScore', data.best_score);
    
    }
  } catch (error) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –Ω–∞–π–∫—Ä–∞—â–æ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É:', error);
  }
}

// --- –õ–∏–¥–µ—Ä–±–æ—Ä–¥ –º–∏–Ω–∏–∏–≥—Ä—ã ---
async function loadLeaderboard() {
  try {
   
    const response = await fetch(`${API_URL}/minigame/leaderboard?fingerprint=${deviceFingerprint}`);
    
    const data = await response.json();
    
    
    const leaderboardList = document.getElementById('leaderboardList');
    
    if (data.success && data.leaderboard && data.leaderboard.length > 0) {
      leaderboardList.innerHTML = '';
      
      data.leaderboard.forEach((player, index) => {
        
        const item = document.createElement('div');
        item.className = 'leaderboard-item';
        
        // –ü–æ–¥—Å–≤–µ—á–∏–≤–∞–µ–º —Ç–µ–∫—É—â–µ–≥–æ –∏–≥—Ä–æ–∫–∞
        if (player.is_current_player) {
          item.classList.add('current-player');
        }
        
        const rank = index + 1;
        let rankClass = '';
        if (rank === 1) rankClass = 'first';
        else if (rank === 2) rankClass = 'second';
        else if (rank === 3) rankClass = 'third';
        
        item.innerHTML = `
          <div class="rank ${rankClass}">${rank}</div>
          <div class="player-info">
            <div class="player-instagram clickable-instagram" data-instagram="${player.instagram}">@${player.instagram}</div>
          </div>
          <div class="score">${player.score}</div>
        `;
        
        leaderboardList.appendChild(item);
      });
      
      // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–ª–∏–∫–æ–≤ –¥–ª—è Instagram –Ω–∏–∫–æ–≤
      const instagramElements = document.querySelectorAll('.clickable-instagram');
      instagramElements.forEach(element => {
        element.addEventListener('click', function(e) {
          e.preventDefault();
          e.stopPropagation();
          
          const instagram = this.getAttribute('data-instagram');
          if (instagram) {
            // –û—Ç–∫—Ä—ã–≤–∞–µ–º Instagram –ø—Ä–æ—Ñ–∏–ª—å –≤ –Ω–æ–≤–æ–π –≤–∫–ª–∞–¥–∫–µ
            const instagramUrl = `https://instagram.com/${instagram}`;
            window.open(instagramUrl, '_blank', 'noopener,noreferrer');
          }
        });
      });
    
    } else {
      leaderboardList.innerHTML = '<div class="loading">–ü–æ–∫–∞ –Ω–µ—Ç –≥—Ä–∞–≤—Ü—ñ–≤</div>';
    
    }
  } catch (error) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ª—ñ–¥–µ—Ä–±–æ—Ä–¥–∞:', error);
    document.getElementById('leaderboardList').innerHTML = '<div class="loading">–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è</div>';
  }
}

async function saveMinigameScore(score) {
  try {
   
    let instagram = document.getElementById('insta').value.trim().replace('@', '');
    
    if (!instagram) {
     
      instagram = localStorage.getItem('minigameInstagram');
      
      if (!instagram) {
       
        instagram = prompt('üé£ –í—ñ–¥–º—ñ–Ω–Ω–æ! –í–∏ –∑–Ω–∞–π—à–ª–∏ —Å–µ–∫—Ä–µ—Ç–Ω—É –º—ñ–Ω—ñ–≥—Ä—É!\n\n–í–≤–µ–¥—ñ—Ç—å –≤–∞—à Instagram –¥–ª—è —É—á–∞—Å—Ç—ñ –≤ –ª—ñ–¥–µ—Ä–±–æ—Ä–¥—ñ:');
        
        if (!instagram) {
         
          return;
        }
        
        instagram = instagram.trim().replace('@', '');
        
        if (instagram.length < 3) {
          alert('‚ùå Instagram –ø–æ–≤–∏–Ω–µ–Ω –º—ñ—Å—Ç–∏—Ç–∏ –º—ñ–Ω—ñ–º—É–º 3 —Å–∏–º–≤–æ–ª–∏!');
          return;
        }
        
       
        localStorage.setItem('minigameInstagram', instagram);
       
      } else {
       
      }
    }
    

    const hintShown = localStorage.getItem('shrimpHintShown');
    const foundBeforeRoulette = !hintShown;
    
    const storedBestScore = localStorage.getItem('playerBestScore');
    const currentBestScore = storedBestScore ? parseInt(storedBestScore) : 0;
    
    console.log(`üé£ –ü–æ—Ç–æ—á–Ω–∏–π —Ä–∞—Ö—É–Ω–æ–∫: ${score}, –Ω–∞–π–∫—Ä–∞—â–∏–π: ${currentBestScore}`);
    
    const response = await fetch(`${API_URL}/minigame/save`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        fingerprint: deviceFingerprint,
        instagram: instagram,
        score: score,
        found_before_roulette: foundBeforeRoulette,
        current_best: currentBestScore
      })
    });
    
    const result = await response.json();
    
    if (result.success) {
      if (result.message === 'Score not improved') {
        console.log(`üé£ –†–µ–∑—É–ª—å—Ç–∞—Ç –Ω–µ –ø–æ–∫—Ä–∞—â–µ–Ω–∏–π: ${score} –±–∞–ª—ñ–≤ (–Ω–∞–π–∫—Ä–∞—â–∏–π: ${result.current_best})`);
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–≥—Ä–æ–∫—É
        const endTitle = document.getElementById('gameEndTitle');
        const endEmoji = document.getElementById('gameEndEmoji');
        endTitle.textContent = '–¢–∏ –º–æ–∂–µ—à –∫—Ä–∞—â–µ!';
        endEmoji.textContent = 'üéØ';
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ª—É—á—à–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ
        const finalScore = document.getElementById('finalScore');
        finalScore.innerHTML = `${score}<br><small>–ù–∞–π–∫—Ä–∞—â–∏–π: ${result.current_best}</small>`;
      } else {
        console.log(`üé£ –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω: ${score} –æ—á–∫–æ–≤ –¥–ª—è @${instagram}`);
        // –û–±–Ω–æ–≤–ª—è–µ–º –ª—É—á—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ localStorage
        localStorage.setItem('playerBestScore', score);
      }
      
      // –û–±–Ω–æ–≤–ª—è–µ–º –ª–∏–¥–µ—Ä–±–æ—Ä–¥
      await loadLeaderboard();
    } else {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É –º—ñ–Ω—ñ–≥—Ä–∏:', result.error);
    }
  } catch (error) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É –º—ñ–Ω—ñ–≥—Ä–∏:', error);
  }
}
